{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Card.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {board} from './store.js';\n  import Card from './components/Card.svelte';\n  import Modal from './components/Card.svelte';\n\n  let score = 7;\n\n  function addScore() {\n    score = score + 1;\n  }\n\n</script>\n\n<main>\n  <h1>Score: {score}</h1>\n  {#if score === 8}\n    <Modal />\n  {/if}\n  <div class=\"board\">\n    {#each $board as row, r}\n      <div class=\"row\">\n        {#each row as card, c}\n          <Card {...card} {addScore} pos={{r, c}} />\n        {/each}\n      </div>\n    {/each}\n  </div>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n  import {onDestroy} from 'svelte';\n  import {\n    board, \n    updateBoard, \n    last, \n    setMatches,\n    isAnimating,\n    toggleAnimate,\n    updateScore\n    } from  '../store.js';\n    import {cardAt} from '../utils/helpers.js';\n\n  export let pos, match, selected, addScore;\n\n  let timer = {},\n    inActiveTimer = {},\n    inActive = false;\n\n  onDestroy(() => {\n    timer.clearTimeOut();\n    inActiveTimer.clearTimeOut();\n  });\n\n  $: if (match) {\n    inActiveTimer = setTimeout(() => {inActive = match}, 1000);\n  };\n  \n  function handleClick() {\n    if (cardAt($board, pos).match || $isAnimating) return;\n\n    updateBoard(pos);\n\n    // if no last card, set it\n    if (!$last) {\n      last.set(pos);\n      return;\n    };\n\n    // current card same as last, reset last\n    if ($last == pos) {\n      last.set(null);\n      return;\n    };\n\n    // current value matches the last\n    if (cardAt($board, $last).value === cardAt($board, pos).value) {\n      addScore();\n      setMatches($last, pos);\n      last.set(null);\n      return;\n    };\n\n    // not a match, start rotate back to default\n    isAnimating.set(true);\n    timer = setTimeout(flipCards, 1000);\n  };\n\n  function flipCards() {\n    updateBoard(pos, $last);\n    last.set(null);\n    isAnimating.set(false);\n  };\n\n</script>\n\n<div class=\"flip-card\" class:animating={$isAnimating} on:click={handleClick} >\n  <div class:selected class=\"flip-card-inner\">\n    <div class=\"flip-card-front\">\n      <h1>HELLO</h1>\n    </div>\n    <div class:inActive class=\"flip-card-back\">\n      <h1>{cardAt($board, pos).value}</h1>\n    </div>\n  </div>\n</div>\n\n<style>\n/* https://www.w3schools.com/howto/howto_css_flip_card.asp */\n/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */\n.flip-card {\n  background-color: transparent;\n  width: 200px;\n  height: 100px;\n  border: 1px solid #f1f1f1;\n  perspective: 1000px; /* Remove this if you don't want the 3D effect */\n  flex: 1 0 33%;\n  display: inline-block;\n}\n\n/* This container is needed to position the front and back side */\n.flip-card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n}\n\n/* Do an horizontal flip when you move the mouse over the flip box container */\n/* .flip-card:hover .flip-card-inner {\n  transform: rotateY(180deg);\n} */\n\n.flip-card:hover {\n  cursor: pointer;\n}\n\n.animating.flip-card:hover, .animating {\n  cursor: not-allowed;\n}\n\n.selected{\n  transform: rotateY(180deg);\n  transition: 0.8s;\n}\n\n/* Position the front and back side */\n.flip-card-front, .flip-card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n}\n\n/* Style the front side (fallback if image is missing) */\n.flip-card-front {\n  background-color: #bbb;\n  color: black;\n}\n\n/* Style the back side */\n.flip-card-back {\n  background-color: dodgerblue;\n  color: white;\n  transform: rotateY(180deg);\n}\n\n.inActive {\n  opacity: 0.5;\n  transition: 1s;\n}\n\n.inActive:hover {\n  cursor: default;\n}\n</style>"
  ],
  "names": [],
  "mappings": "AA8BC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;ACgCF,UAAU,eAAC,CAAC,AACV,gBAAgB,CAAE,WAAW,CAC7B,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,WAAW,CAAE,MAAM,CACnB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,OAAO,CAAE,YAAY,AACvB,CAAC,AAGD,gBAAgB,eAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,SAAS,CAAC,IAAI,CAC1B,eAAe,CAAE,WAAW,AAC9B,CAAC,AAOD,yBAAU,MAAM,AAAC,CAAC,AAChB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,UAAU,yBAAU,MAAM,CAAE,UAAU,eAAC,CAAC,AACtC,MAAM,CAAE,WAAW,AACrB,CAAC,AAED,wBAAS,CAAC,AACR,SAAS,CAAE,QAAQ,MAAM,CAAC,CAC1B,UAAU,CAAE,IAAI,AAClB,CAAC,AAGD,+BAAgB,CAAE,eAAe,eAAC,CAAC,AACjC,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,mBAAmB,CAAE,MAAM,AAC7B,CAAC,AAGD,gBAAgB,eAAC,CAAC,AAChB,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,KAAK,AACd,CAAC,AAGD,eAAe,eAAC,CAAC,AACf,gBAAgB,CAAE,UAAU,CAC5B,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,QAAQ,MAAM,CAAC,AAC5B,CAAC,AAED,SAAS,eAAC,CAAC,AACT,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,EAAE,AAChB,CAAC,AAED,wBAAS,MAAM,AAAC,CAAC,AACf,MAAM,CAAE,OAAO,AACjB,CAAC"
}